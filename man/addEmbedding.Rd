% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Embedding.R
\name{addEmbedding}
\alias{addEmbedding}
\title{Add an embedding of a reduced dimensions object to an ArchRProject}
\usage{
addEmbedding(ArchRProj = NULL, reducedDims = "IterativeLSI",
  embedding = "UMAP", embeddingOut = NULL, embeddingParams = list(),
  dimsToUse = NULL, corCutOff = 0.75, saveModel = TRUE, seed = 1,
  force = FALSE, threads = getArchRThreads(), ...)
}
\arguments{
\item{ArchRProj}{An \code{ArchRProject} object.}

\item{reducedDims}{The name of the \code{reducedDims} object (i.e. "IterativeLSI") to use from the designated \code{ArchRProject}.}

\item{embedding}{The type of embedding to add to the \code{ArchRProject} object. Possible options include "UMAP", "TUMAP", "RTSNE", and "FFRTSNE".}

\item{embeddingOut}{The name for the embedding to be stored in the given \code{ArchRProject} object.}

\item{embeddingParams}{A list of extra parameters to pass to the designated \code{embedding} function.}

\item{dimsToUse}{A vector containing the dimensions from the \code{reducedDims} object to use in computing the embedding.}

\item{corCutOff}{A numeric cutoff for the correlation of each dimension to the sequencing depth. If the dimension has a correlation to sequencing depth that is greater than the \code{corCutOff}, it will be excluded from analysis.}

\item{saveModel}{A boolean value indicating whether to save the UMAP model for downstream usage such as projection of data into the UMAP embedding. Only relevant if \code{embedding} is "UMAP".}

\item{seed}{A number to be used as the seed for random number generation. It is recommended to keep track of the seed used so that you can reproduce results downstream.}

\item{force}{A boolean value that indicates whether or not to overwrite the relevant data in the \code{ArchRProject} object if the given \code{embeddingOut} already exists.}

\item{threads}{The number of threads to be used for parallel computing.}

\item{...}{additional args}
}
\description{
This function will compute an embedding and add it to an ArchRProject.
}
